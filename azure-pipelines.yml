pool: Default

stages:
- stage: validate_stage
  jobs:
  - job: validate_job
    continueOnError: false
    steps:
    - task: TerraformTaskV2@2
      displayName: "Terraform init"
      inputs:
        provider: "aws"
        command: "init"
        backendServiceAWS: "AWS-azure-ckpo"
        backendAWSBucketName: "ckpo-terraform-state"
        backendAWSKey: "myTerraformAnsibelProject.tfstate"
      
    - task: TerraformTaskV2@2
      displayName: "Terraform validate"
      inputs:
        provider: "aws"
        command: "validate"
        environmentServiceNameAWS: "AWS-azure-ckpo"

- stage: deploy_stage
  jobs:
  - deployment: deployment
    continueOnError: false
    environment: "test"
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: TerraformTaskV2@2
              displayName: "Terraform init"
              inputs:
                provider: "aws"
                command: "init"
                backendServiceAWS: "AWS-azure-ckpo"
                backendAWSBucketName: "ckpo-terraform-state"
                backendAWSKey: "azure.tfstate"
            - task: TerraformTaskV2@2
              displayName: "Terraform plan"
              inputs:
                provider: "aws"
                command: "plan"
                environmentServiceNameAWS: "AWS-azure-ckpo"
            - task: TerraformTaskV2@2
              displayName: "Terraform apply"
              inputs:
                provider: "aws"
                command: "apply"
                environmentServiceNameAWS: "AWS-azure-ckpo"
