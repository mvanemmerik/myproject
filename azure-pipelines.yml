parameters:
- name: image
  displayName: Pool Image
  type: string
  default: ubuntu-latest
  values:
  - windows-latest
  - ubuntu-latest
  - macOS-latest

- name: tfWorkspace
  displayName: tfWorkspace
  type: string
  default: dev
  values:
  - dev
  - non-prod
  - prod

stages:
- stage: validate_stage
  jobs:
  - job: validate_job
    continueOnError: false
    steps:
    - task: TerraformTaskV2@2
      displayName: "Terraform init"
      inputs:
        provider: "aws"
        command: "init"
        backendServiceAWS: "AWS-monty-ckpo"
        backendAWSBucketName: "ckpo-terraform-state"
        backendAWSKey: "azure.tfstate"
      
    - task: TerraformTaskV2@2
      displayName: "Terraform validate"
      inputs:
        provider: "aws"
        command: "validate"
        environmentServiceNameAWS: "AWS-monty-ckpo"
      env:
        TF_WORKSPACE: ${{ parameters.tfWorkspace }}
- stage: deploy_stage
  jobs:
  - deployment: deployment
    continueOnError: false
    environment: "test"
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: TerraformTaskV2@2
              displayName: "Terraform init"
              inputs:
                provider: "aws"
                command: "init"
                backendServiceAWS: "AWS-monty-ckpo"
                backendAWSBucketName: "ckpo-terraform-state"
                backendAWSKey: "azure.tfstate"
            - task: TerraformTaskV2@2
              displayName: "Terraform plan"
              inputs:
                provider: "aws"
                command: "plan"
                environmentServiceNameAWS: "AWS-monty-ckpo"
              env:
                TF_WORKSPACE: ${{ parameters.tfWorkspace }}
            - task: TerraformTaskV2@2
              displayName: "Terraform apply"
              inputs:
                provider: "aws"
                command: "apply"
                environmentServiceNameAWS: "AWS-monty-ckpo"
              env:
                TF_WORKSPACE: ${{ parameters.tfWorkspace }}

